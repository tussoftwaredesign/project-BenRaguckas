# Values

LocalDev: true
Namespace: msgb

Ingress:
  enable: true
  name: mesh-ingress
  ingressClassName: nginx
  bodySize: 32m

# GoApi configuration
GoApi:
  enable: false
  name: go-api
  replicaCount: 1
  image: beanbon/go-rest-api:0.6.0
  configMap:
    path: config.xml
  service:
    suffix: -service
    enable: true
    type: ClusterIP
    # Default API service + ing configuration
    api:
      suffix: -api
      port: 8080
      targetPort: 8080
      protocol: TCP
      ingress:
        enable: true
        host: api.localdev.me

# Minio configuration
Minio:
  enable: true
  name: minio
  replicaCount: 1
  image: quay.io/minio/minio:RELEASE.2023-03-13T19-46-17Z
  # Credentials for console and communication for go-api
  creds:
    rootUser: minio
    rootPassword: minio123
  service:
    suffix: -service
    enable: true
    # type: ClusterIP
    type: LoadBalancer
    # Default API service + ing configuration
    # > to be communicated with by go-api
    api:
      suffix: -api
      port: 9000
      targetPort: 9000
      protocol: TCP
      ingress:
        enable: false 
        host: min.localdev.me
    # Optional console configuration
    # > to help with debuging / dev
    console: 
      suffix: -console
      enable: true
      port: 9090
      targetPort: 9090
      protocol: TCP
      ingress:
        enable: true 
        host: minio.localdev.me
  pvc:
    storage: 1Gi
    storageClassName: hostpath-minio-pv

# RabbitMQ configuration
RabbitMQ:
  enable: true
  name: rabbitmq
  replicaCount: 1
  image: rabbitmq:3.11
  creds:
    defaultUser: guest
    defaultPassword: guest
  service:
    suffix: -service
    enable: true
    # type: ClusterIP
    type: LoadBalancer
    # Default API service + ing configuration
    # > to be communicated with by go-api
    api:
      suffix: -api
      port: 5672
      targetPort: 5672
      protocol: TCP
      ingress:
        enable: true 
        host: rmq.localdev.me
    # Optional management configuration
    # > this attaches -management to the image name
    # > to help with debuging / dev
    console:
      suffix: -console
      enable: true
      port: 15672
      targetPort: 15672
      protocol: TCP
      ingress:
        enable: true 
        host: rabbitmq.localdev.me


# RabbitMQ configuration
Mongo:
  enable: true
  name: mongodb
  replicaCount: 1
  image: mongo:4.4
  creds:
    rootUser: mongo1
    rootPassword: mongo1234
  service:
    suffix: -service
    enable: true
    # type: ClusterIP
    type: LoadBalancer
    api:
      suffix: -api
      port: 27017
      targetPort: 27017
      protocol: TCP
      ingress:
        enable: false 
        host: mongo.localdev.me
  pvc:
    storage: 1Gi
    storageClassName: hostpath-mongo-pv



# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
